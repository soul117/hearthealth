apply plugin: 'com.android.application'
apply plugin: 'realm-android'
// Apply app info
apply from: "$rootProject.projectDir/buildsystem/appinfo.gradle"
// Apply app dependencies
apply from: "$rootProject.projectDir/buildsystem/appinfo.gradle"
// Apply runners
apply from: "$rootProject.projectDir/buildsystem/runners.gradle"
// Apply jacoco
apply from: "$rootProject.projectDir/buildsystem/jacoco.gradle"
// Project repositories
allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        flatDir {

            dirs 'libs'
            dirs 'libs/scichart'
        }
        maven {
            url 'https://maven.google.com'
        }
        maven {
            url "http://dl.bintray.com/glomadrian/maven"
        }
        maven { url 'https://jitpack.io' }
        maven {
            url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo'
        }
    }

}
buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.2'
        classpath 'com.android.tools.build:gradle:3.5.1'
    }
}
apply plugin: 'project-report'
apply plugin: 'com.getkeepsafe.dexcount'
android {
    compileSdkVersion appInfo.compileSdkVersion
    buildToolsVersion appInfo.buildToolsVersion
    defaultConfig {
        applicationId appInfo.applicationId
        minSdkVersion appInfo.minSdkVersion
        targetSdkVersion appInfo.targetSdkVersion
        versionCode appInfo.codeVersion
        versionName appInfo.versionName
        testInstrumentationRunner testRunners.instrumentationRunner
        /* jackOptions {
             enabled true
         }*/
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    }
    dexOptions {
        jumboMode true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/NOTICE.txt'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'MissingTranslation'
        abortOnError false
    }
    buildToolsVersion '28.0.3'
}

dependencies {
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation "androidx.drawerlayout:drawerlayout:1.0.0"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation(testDependencies.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    annotationProcessor 'dk.ilios:realmfieldnameshelper:1.1.1'

    // Debug utilities

    // Android support dependencies
    //implementation androidSupportDependencies.appcompatV7
    //implementation androidSupportDependencies.design

    // implementation androidSupportDependencies.supportV4
    //implementation androidSupportDependencies.cardView
    //implementation androidSupportDependencies.recyclerViewV7
    //implementation androidSupportDependencies.constraintLayout
    //implementation androidSupportDependencies.pallete

    // Font and Icons dependencies
    implementation fontIconsDependencies.androidIconifyCore

    // Collections dependencies

    //implementation collectionDependencies.apacheCommonsCollections

    // Image dependencies
    implementation imageDependencies.circleImage

    // Notification and messages dependencies
    implementation notifactionsMessagesDependencies.prettyToast

    // Dependency injection tools
    implementation diDependencies.butterKnife
    annotationProcessor annotationProcessors.butterKnife
    annotationProcessor diDependencies.dagger2Compiler
    implementation diDependencies.dagger2
    compileOnly diDependencies.javaAnnotaionJSR250

    // Serialization dependencies
    implementation serializationDependencies.moshi

    // Media dependencies

    /* implementation mediaDependencies.rxAndroidAudio
             implementation mediaDependencies.audioProcessor*/

    // Reactive dependencies
    implementation reactiveDependencies.rxJava
    implementation reactiveDependencies.rxAndroid
    implementation reactiveDependencies.rxBindings
    implementation reactiveDependencies.rxBindingsDesign

    // Databases

    // Custom views dependencies
    implementation customViewsDependencies.circleTimeView
    implementation customViewsDependencies.iconSwitchLocal
    implementation customViewsDependencies.audiovisualization

    // Chart dependencies
    implementation(name: chartDependencies.sciChartCore, ext: 'aar')
    implementation(name: chartDependencies.sciChartDrawing, ext: 'aar')
    implementation(name: chartDependencies.sciChartData, ext: 'aar')
    implementation(name: chartDependencies.sciChartCharting, ext: 'aar')
    implementation(name: chartDependencies.sciChartExtensions, ext: 'aar')

    // implementation customViewsDependencies.mpChart

    // implementation customViewsDependencies.graphView

    //implementation customViewsDependencies.materialDesign

    //   implementation customViewsDependencies.countDownView

    // Permission dependencies
    implementation permissionDependencies.rxPermissions

    // Dialog dependencies
    implementation dialogsDependencies.materialDialog
    implementation dialogsDependencies.materialDatePicker

    // Utils dependencies

    //implementation utilDependencies.awesomeValidation

    //implementation utilDependencies.utilsCore

    // Module dependencies

    // implementation project(':ecgaudioprocessor')

    // Test dependencies
    testImplementation testDependencies.junit
    implementation project(path: ':ecgsignalprocessor')
    implementation files('libs/simple-xml-2.7.1.jar')
}
